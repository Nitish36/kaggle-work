{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "b43cbec5",
   "metadata": {},
   "outputs": [],
   "source": [
    "a=10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "477f5a0c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "int"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "c3862bab",
   "metadata": {},
   "outputs": [],
   "source": [
    "b=10.35"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "d77ddaab",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "float"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(b)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "a5ca25b1",
   "metadata": {},
   "outputs": [],
   "source": [
    "c='12.45'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "776870dc",
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "str"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(c)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "a39d516a",
   "metadata": {},
   "outputs": [],
   "source": [
    "c='Hello'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "3ebcf063",
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "str"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(c)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "eda1eb36",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Hello\n"
     ]
    }
   ],
   "source": [
    "print(c)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "86c2fba8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Hello'"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "c"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "e2ab4c59",
   "metadata": {},
   "outputs": [],
   "source": [
    "c=\"\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "41a05489",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "False"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bool(c)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "d924f82d",
   "metadata": {},
   "outputs": [],
   "source": [
    "b=' '"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "e2555ba4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bool(b)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "de54cf46",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Python Datatypes\n",
    "#List,Tuples,Strings,Dictionary and Sets\n",
    "#List=[]\n",
    "#Collection of arrays\n",
    "#Ordered,Iterable,Mutable,Multiple datatypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "69164e1d",
   "metadata": {},
   "outputs": [],
   "source": [
    "x=[]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "4d995546",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "list"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "7d679ced",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[]\n"
     ]
    }
   ],
   "source": [
    "print(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "b7ac6988",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Add one element\n",
    "x.append(100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "89ca29f3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[100]\n"
     ]
    }
   ],
   "source": [
    "print(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "f21c4d19",
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "list.append() takes exactly one argument (2 given)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[1;32m~\\AppData\\Local\\Temp/ipykernel_6484/3608744768.py\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0mx\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;36m234\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;36m45\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;31mTypeError\u001b[0m: list.append() takes exactly one argument (2 given)"
     ]
    }
   ],
   "source": [
    "x.append(234,45)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "42cef36a",
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "list.extend() takes exactly one argument (2 given)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[1;32m~\\AppData\\Local\\Temp/ipykernel_6484/3579872247.py\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0mx\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mextend\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;36m45\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;36m56\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;31mTypeError\u001b[0m: list.extend() takes exactly one argument (2 given)"
     ]
    }
   ],
   "source": [
    "x.extend(45,56)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "661cf3de",
   "metadata": {},
   "outputs": [],
   "source": [
    "x.extend([100,3.45,'List'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "ff2a9c3a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[100, 100, 3.45, 'List']"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "8d6caaa5",
   "metadata": {},
   "outputs": [],
   "source": [
    "x.insert(2,456)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "272f07a9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[100, 100, 456, 3.45, 'List']"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "4e0a34f2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'List'"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x.pop()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "eb2a43b3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[100, 100, 456, 3.45]"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "c38f989d",
   "metadata": {},
   "outputs": [],
   "source": [
    "x.remove(456)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "57c39129",
   "metadata": {},
   "outputs": [],
   "source": [
    "x.extend(['List',4.435,2])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "0e4bfd83",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[100, 100, 3.45, 'List', 4.435, 2]"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "151afa0f",
   "metadata": {},
   "outputs": [],
   "source": [
    "x.reverse()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "fdb73910",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[2, 4.435, 'List', 3.45, 100, 100]"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "e4c61053",
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "'<' not supported between instances of 'str' and 'float'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[1;32m~\\AppData\\Local\\Temp/ipykernel_6484/1937178097.py\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0mx\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0msort\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;31mTypeError\u001b[0m: '<' not supported between instances of 'str' and 'float'"
     ]
    }
   ],
   "source": [
    "x.sort()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "a6f95ef3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[2, 4.435, 'List', 3.45, 100, 100]"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "0094f323",
   "metadata": {},
   "outputs": [],
   "source": [
    "x.remove('List')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "5dac3c80",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[2, 4.435, 3.45, 100, 100]"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "36519401",
   "metadata": {},
   "outputs": [],
   "source": [
    "x.sort()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "3ec52a0b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[2, 3.45, 4.435, 100, 100]"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "ccaf3887",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x.count(100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "39281085",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[2, 3.45, 4.435, 100, 100]"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "1e75166d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x.index(4.435)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "51845c62",
   "metadata": {},
   "outputs": [],
   "source": [
    "y=[[100,200],[300,400]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "05751e3a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[[100, 200], [300, 400]]"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "491a82e5",
   "metadata": {},
   "outputs": [],
   "source": [
    "c0    c1\n",
    "[100 200-r0\n",
    " 300 400]-r1\n",
    "[r][c]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "0391f246",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[100, 200]"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "611d86df",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "200"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y[0][1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "6e513106",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[[100, 200], [300, 400]]"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "514358c6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "300"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y[1][0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "8778ff62",
   "metadata": {},
   "outputs": [],
   "source": [
    "y=[12,3,[24,'List',46],[100,4500,56]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "2ac995bc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[12, 3, [24, 'List', 46], [100, 4500, 56]]"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "1a18313e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y[1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "d4f1ccc4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[12, 3, [24, 'List', 46], [100, 4500, 56]]"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1fca2389",
   "metadata": {},
   "outputs": [],
   "source": [
    "[12\n",
    "3\n",
    "[24 'list' 46]\n",
    "[100 4500  56]]-[r][c]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "03aa6d66",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[100, 4500, 56]"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y[3]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "d3cbfd09",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "100"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y[3][0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "d4fa8915",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[12, 3, [24, 'List', 46], [100, 4500, 56]]"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "89874e52",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "56"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y[3][2]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "6e7b03a0",
   "metadata": {},
   "outputs": [],
   "source": [
    "y.extend([[123,90,[12.45],56],'Python',\"String\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "9d32ca77",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[12,\n",
       " 3,\n",
       " [24, 'List', 46],\n",
       " [100, 4500, 56],\n",
       " [123, 90, [12.45], 56],\n",
       " 'Python',\n",
       " 'String']"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "a7990d34",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'String'"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y[6\n",
    " ]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "28f7a2a7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[12,\n",
       " 3,\n",
       " [24, 'List', 46],\n",
       " [100, 4500, 56],\n",
       " [123, 90, [12.45], 56],\n",
       " 'Python',\n",
       " 'String']"
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "7de40c79",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "90"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y[4][1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "3dcbcae1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[12,\n",
       " 3,\n",
       " [24, 'List', 46],\n",
       " [100, 4500, 56],\n",
       " [123, 90, [12.45], 56],\n",
       " 'Python',\n",
       " 'String']"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "3c753523",
   "metadata": {},
   "outputs": [],
   "source": [
    "y[4][3]=560"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "9c9472ef",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[12,\n",
       " 3,\n",
       " [24, 'List', 46],\n",
       " [100, 4500, 56],\n",
       " [123, 90, [12.45], 560],\n",
       " 'Python',\n",
       " 'String']"
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "1e369c64",
   "metadata": {},
   "outputs": [],
   "source": [
    "y[3][1]=450"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "23bb4628",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[12,\n",
       " 3,\n",
       " [24, 'List', 46],\n",
       " [100, 450, 56],\n",
       " [123, 90, [12.45], 560],\n",
       " 'Python',\n",
       " 'String']"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "424d36ec",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[12.45]"
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y[4][2]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "ed0e52bc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "12.45"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y[4][2][0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "f6a121a0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[12,\n",
       " 3,\n",
       " [24, 'List', 46],\n",
       " [100, 450, 56],\n",
       " [123, 90, [12.45], 560],\n",
       " 'Python',\n",
       " 'String']"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "acf7cfb1",
   "metadata": {},
   "outputs": [],
   "source": [
    "#[12,45,57]\n",
    "[12,\n",
    " 3,\n",
    " [24, 'List', 46],[12,45,57]\n",
    " [100, 450, 56],\n",
    " [123, 90, [12.45], 560],\n",
    " 'Python',\n",
    " 'String']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "e3cedb8e",
   "metadata": {},
   "outputs": [],
   "source": [
    "y[2].extend([[[12,45,57]]])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "5f4607e4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[12,\n",
       " 3,\n",
       " [24, 'List', 46, [[12, 45, 57]]],\n",
       " [100, 450, 56],\n",
       " [123, 90, [12.45], 560],\n",
       " 'Python',\n",
       " 'String']"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "2556a2d7",
   "metadata": {},
   "outputs": [],
   "source": [
    "y=[12,34]\n",
    "z=[10,20]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "f3cd107c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[12, 34, 10, 20]"
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y+z"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "2277a61e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: numpy in c:\\users\\techciti\\anaconda3\\lib\\site-packages (1.20.3)\n"
     ]
    }
   ],
   "source": [
    "!pip install numpy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "fcfcc138",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "e1eb3c61",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([22, 54])"
      ]
     },
     "execution_count": 79,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "numpy.add(y,z)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "117da698",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "40d1ff3d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([120, 680])"
      ]
     },
     "execution_count": 81,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.multiply(y,z)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "ab167612",
   "metadata": {},
   "outputs": [],
   "source": [
    "from numpy import add,multiply,subtract"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "64b326b7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([22, 54])"
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "add(y,z)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "f43c1393",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 2, 14])"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "subtract(y,z)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "40bef575",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "46"
      ]
     },
     "execution_count": 87,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from numpy import *#Used to access all the methods\n",
    "sum(y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "5130f803",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[12, 34]"
      ]
     },
     "execution_count": 88,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "64d49eb0",
   "metadata": {},
   "outputs": [],
   "source": [
    " #Tuples=()\n",
    "#ordered,Iterable,Immutable,Allows Multiple datatypes\n",
    "a=([12,45],'Tuples',24,3435.5,(435))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "22961340",
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "tuple"
      ]
     },
     "execution_count": 90,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "f786a290",
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1"
      ]
     },
     "execution_count": 93,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a.count(24)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "id": "65c3ba9d",
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3"
      ]
     },
     "execution_count": 94,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a.index(3435.5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "id": "915b2906",
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "([12, 45], 'Tuples', 24, 3435.5, 435)"
      ]
     },
     "execution_count": 95,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "id": "82276e94",
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "list"
      ]
     },
     "execution_count": 96,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(a[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "id": "724cd182",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "([12, 45], 'Tuples', 24, 3435.5, 435)"
      ]
     },
     "execution_count": 97,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "ce7c90d3",
   "metadata": {},
   "outputs": [],
   "source": [
    "#([123,12, 45], 'Tuples', 24, 3435.5, 435)\n",
    "a[0].insert(0,123)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "id": "ed6978fb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "([123, 12, 45], 'Tuples', 24, 3435.5, 435)"
      ]
     },
     "execution_count": 99,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "id": "649e2d2b",
   "metadata": {},
   "outputs": [],
   "source": [
    "x=(100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "id": "e4b10250",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "int"
      ]
     },
     "execution_count": 102,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "id": "5e7d9f48",
   "metadata": {},
   "outputs": [],
   "source": [
    "x=(100,)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "id": "8952535f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "tuple"
      ]
     },
     "execution_count": 104,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "id": "e9639f14",
   "metadata": {},
   "outputs": [],
   "source": [
    "y=([23,45,345,'String',4.45])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "id": "7854ff43",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "list"
      ]
     },
     "execution_count": 107,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "id": "92b577d8",
   "metadata": {},
   "outputs": [],
   "source": [
    "y=([23,45,345,'String',4.45],)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "id": "fbd99d26",
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "ename": "IndexError",
     "evalue": "tuple index out of range",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mIndexError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[1;32m~\\AppData\\Local\\Temp/ipykernel_6484/1463351067.py\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0my\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;36m1\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;31mIndexError\u001b[0m: tuple index out of range"
     ]
    }
   ],
   "source": [
    "y[1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "id": "551b5a47",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "list"
      ]
     },
     "execution_count": 110,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(y[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "id": "6d841c76",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "([23, 45, 345, 'String', 4.45],)"
      ]
     },
     "execution_count": 111,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "id": "3d82d83e",
   "metadata": {},
   "outputs": [],
   "source": [
    "y[0].remove('String')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "id": "dc421beb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "([23, 45, 345, 4.45],)"
      ]
     },
     "execution_count": 113,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "id": "c078e4cc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "345"
      ]
     },
     "execution_count": 114,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y[0][2]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "id": "5d1a92d8",
   "metadata": {},
   "outputs": [],
   "source": [
    "#String-'',\"\",''''''\n",
    "#Ordered,Iterable,Immutable,Multiple datatypes\n",
    "a='[324,45]'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "id": "f49879bf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "str"
      ]
     },
     "execution_count": 116,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "id": "597374f3",
   "metadata": {},
   "outputs": [],
   "source": [
    "z='(345,56,345.56)'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "id": "59a58a28",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "str"
      ]
     },
     "execution_count": 118,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(z)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "id": "14b1d511",
   "metadata": {},
   "outputs": [],
   "source": [
    "c=\"hello world\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "id": "1e712ad1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Hello world'"
      ]
     },
     "execution_count": 120,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "c.capitalize()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "id": "38d5d717",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'HELLO WORLD'"
      ]
     },
     "execution_count": 121,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "c.upper()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "id": "beb8eec1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'hello world'"
      ]
     },
     "execution_count": 122,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "c.lower()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "id": "2d36e121",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'hello world'"
      ]
     },
     "execution_count": 123,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "c"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "id": "781f1bb0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['hello', 'world']"
      ]
     },
     "execution_count": 124,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "c.split()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "id": "ae0a6c8f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "False"
      ]
     },
     "execution_count": 125,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "c.startswith('H')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "id": "4481c91b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 126,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "c.endswith('d')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "id": "00a89a87",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'hello world'"
      ]
     },
     "execution_count": 127,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "c"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "id": "ca329f6c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'       hello world       '"
      ]
     },
     "execution_count": 128,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "c.center(25)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "id": "272812f6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'*******hello world*******'"
      ]
     },
     "execution_count": 130,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "c.center(25,'*')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "id": "58c7b446",
   "metadata": {},
   "outputs": [],
   "source": [
    "y='    String Data   '"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "id": "d086d0ef",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'    String Data   '"
      ]
     },
     "execution_count": 132,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "id": "74931b09",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'String Data'"
      ]
     },
     "execution_count": 133,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#ELiminate the space\n",
    "y.strip()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "id": "c40cfcca",
   "metadata": {},
   "outputs": [],
   "source": [
    "#String Slicing[Included:Exclude(<range),n+1]\n",
    "x='String Data'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "id": "ada00dac",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Strin'"
      ]
     },
     "execution_count": 135,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x[0:5]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "id": "545c52b8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'String'"
      ]
     },
     "execution_count": 136,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x[0:6]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 137,
   "id": "9bd1bb01",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Str'"
      ]
     },
     "execution_count": 137,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Str\n",
    "x[0:3]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 138,
   "id": "62a583e8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Str'"
      ]
     },
     "execution_count": 138,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x[:3]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "id": "b42ce12b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'String Data'"
      ]
     },
     "execution_count": 139,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x[:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 140,
   "id": "66802e2c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'String Data'"
      ]
     },
     "execution_count": 140,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 141,
   "id": "af0547b3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Dat'"
      ]
     },
     "execution_count": 141,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#-1=last index position,\n",
    "x[7:-1]#Dat"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 142,
   "id": "ea15ff45",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Da'"
      ]
     },
     "execution_count": 142,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x[7:-2]#da"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 143,
   "id": "b5ec7a74",
   "metadata": {},
   "outputs": [],
   "source": [
    "x=\"Hello World\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "id": "bf6e8c04",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Hell'"
      ]
     },
     "execution_count": 144,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Hell\n",
    "x[:4]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 145,
   "id": "2f6c15df",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Wor'"
      ]
     },
     "execution_count": 145,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Wor\n",
    "x[6:-2]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 146,
   "id": "ed45a62d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'World'"
      ]
     },
     "execution_count": 146,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#World\n",
    "x[6:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 147,
   "id": "22da1a5c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Hello World'"
      ]
     },
     "execution_count": 147,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 148,
   "id": "850adbd8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'HloWrd'"
      ]
     },
     "execution_count": 148,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#HloWrd\n",
    "x[::2]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 149,
   "id": "fc62aaae",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'HlWl'"
      ]
     },
     "execution_count": 149,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#HlWl\n",
    "x[::3]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "id": "28376675",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'dlroW olleH'"
      ]
     },
     "execution_count": 150,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x[::-1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 151,
   "id": "fc5e4a38",
   "metadata": {},
   "outputs": [],
   "source": [
    "y=\"References\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 152,
   "id": "cfb25242",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Refer'"
      ]
     },
     "execution_count": 152,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Refer,Rens,rence\n",
    "y[0:5]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 153,
   "id": "892f2e96",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Rens'"
      ]
     },
     "execution_count": 153,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y[::3]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 154,
   "id": "655ca43d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'rence'"
      ]
     },
     "execution_count": 154,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y[4:-1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 167,
   "id": "e2041580",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter a: Str\n",
      "Str\n"
     ]
    }
   ],
   "source": [
    "a=input(\"Enter a: \")\n",
    "print(a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 158,
   "id": "f8938dd0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "str"
      ]
     },
     "execution_count": 158,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 160,
   "id": "4168e9a8",
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter a: 23.5\n"
     ]
    },
    {
     "ename": "ValueError",
     "evalue": "invalid literal for int() with base 10: '23.5'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[1;32m~\\AppData\\Local\\Temp/ipykernel_6484/3024385309.py\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0ma\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mint\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0minput\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m\"Enter a: \"\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m      2\u001b[0m \u001b[0mprint\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0ma\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      3\u001b[0m \u001b[0mtype\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0ma\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mValueError\u001b[0m: invalid literal for int() with base 10: '23.5'"
     ]
    }
   ],
   "source": [
    "a=int(input(\"Enter a: \"))\n",
    "print(a)\n",
    "type(a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 161,
   "id": "7fe70bea",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter a: 25\n",
      "25.0\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "float"
      ]
     },
     "execution_count": 161,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a=float(input(\"Enter a: \"))\n",
    "print(a)\n",
    "type(a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 165,
   "id": "12c33695",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "A value is 25.0\n"
     ]
    }
   ],
   "source": [
    "print(\"A value is {}\".format(a))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 163,
   "id": "4a2f5ff8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "A value is  25.0\n"
     ]
    }
   ],
   "source": [
    "print(\"A value is \",a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 164,
   "id": "461f0398",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter x: String\n",
      "X value is String and A value is 25.0\n"
     ]
    }
   ],
   "source": [
    "x=input(\"Enter x: \")\n",
    "print(\"X value is {} and A value is {}\".format(x,a))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 166,
   "id": "f86aad6f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "X value is String and A value is 25.0\n"
     ]
    }
   ],
   "source": [
    "print(\"X value is {arg1} and A value is {arg2}\".format(arg1=x,arg2=a))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 168,
   "id": "ec5a2f0a",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Dictionary-{Key:Values}\n",
    "#Unordered,Iterable,Mutable,Allows Multiple datatypes\n",
    "y={\"Id\":90,\"Name\":\"Anu\"}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 169,
   "id": "48597cf4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dict"
      ]
     },
     "execution_count": 169,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 170,
   "id": "7fd97b39",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dict_keys(['Id', 'Name'])"
      ]
     },
     "execution_count": 170,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y.keys()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 171,
   "id": "131614b6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dict_values([90, 'Anu'])"
      ]
     },
     "execution_count": 171,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y.values()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 172,
   "id": "876dc852",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dict_items([('Id', 90), ('Name', 'Anu')])"
      ]
     },
     "execution_count": 172,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y.items()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 173,
   "id": "3220f2fc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'Id': 90, 'Name': 'Anu'}"
      ]
     },
     "execution_count": 173,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 174,
   "id": "c009afaa",
   "metadata": {},
   "outputs": [],
   "source": [
    "y['College']=\"RNSIT\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 175,
   "id": "a0c479ef",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'Id': 90, 'Name': 'Anu', 'College': 'RNSIT'}"
      ]
     },
     "execution_count": 175,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 176,
   "id": "113efafa",
   "metadata": {},
   "outputs": [],
   "source": [
    "y.update({\"Domain\":\"Data Science\",\"Course\":\"CS\"})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 177,
   "id": "529cb2d9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'Id': 90,\n",
       " 'Name': 'Anu',\n",
       " 'College': 'RNSIT',\n",
       " 'Domain': 'Data Science',\n",
       " 'Course': 'CS'}"
      ]
     },
     "execution_count": 177,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 178,
   "id": "229b8d40",
   "metadata": {},
   "outputs": [
    {
     "ename": "KeyError",
     "evalue": "'name'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "\u001b[1;32m~\\AppData\\Local\\Temp/ipykernel_6484/2812489127.py\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0my\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'name'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;31mKeyError\u001b[0m: 'name'"
     ]
    }
   ],
   "source": [
    "y['name']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 179,
   "id": "5e9aee76",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Anu'"
      ]
     },
     "execution_count": 179,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y['Name']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 180,
   "id": "5cd4bffa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'Id': 90,\n",
       " 'Name': 'Anu',\n",
       " 'College': 'RNSIT',\n",
       " 'Domain': 'Data Science',\n",
       " 'Course': 'CS'}"
      ]
     },
     "execution_count": 180,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 184,
   "id": "8f281d5d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'CS'"
      ]
     },
     "execution_count": 184,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y['Course']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 185,
   "id": "65a313ee",
   "metadata": {},
   "outputs": [],
   "source": [
    "x={\"Id\":[10,20,40,5],\"Domain\":('Python',\"Data Science\",\"AI\",\"ML\")}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 186,
   "id": "d0f6d5d6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'Id': [10, 20, 40, 5], 'Domain': ('Python', 'Data Science', 'AI', 'ML')}"
      ]
     },
     "execution_count": 186,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 187,
   "id": "76235065",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[10, 20, 40, 5]"
      ]
     },
     "execution_count": 187,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x[\"Id\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 188,
   "id": "efbf810c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5"
      ]
     },
     "execution_count": 188,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x[\"Id\"][3]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 189,
   "id": "ad47f336",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'Id': [10, 20, 40, 5], 'Domain': ('Python', 'Data Science', 'AI', 'ML')}"
      ]
     },
     "execution_count": 189,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 190,
   "id": "2050baee",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Data Science'"
      ]
     },
     "execution_count": 190,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x[\"Domain\"][1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 191,
   "id": "a0539f2d",
   "metadata": {},
   "outputs": [],
   "source": [
    "x.update({\"Places\":[\"Bangalore\",(\"Chennai\",[\"Mumbai\",\"Pune\"])]})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 192,
   "id": "36fe572b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'Id': [10, 20, 40, 5],\n",
       " 'Domain': ('Python', 'Data Science', 'AI', 'ML'),\n",
       " 'Places': ['Bangalore', ('Chennai', ['Mumbai', 'Pune'])]}"
      ]
     },
     "execution_count": 192,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 193,
   "id": "84c3a395",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['Bangalore', ('Chennai', ['Mumbai', 'Pune'])]"
      ]
     },
     "execution_count": 193,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x[\"Places\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 194,
   "id": "e130ea68",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "('Chennai', ['Mumbai', 'Pune'])"
      ]
     },
     "execution_count": 194,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x[\"Places\"][1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 195,
   "id": "4bd567d4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Chennai'"
      ]
     },
     "execution_count": 195,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x[\"Places\"][1][0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 196,
   "id": "e74ca9a1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'Id': [10, 20, 40, 5],\n",
       " 'Domain': ('Python', 'Data Science', 'AI', 'ML'),\n",
       " 'Places': ['Bangalore', ('Chennai', ['Mumbai', 'Pune'])]}"
      ]
     },
     "execution_count": 196,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 197,
   "id": "8bfc83c6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Pune'"
      ]
     },
     "execution_count": 197,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x[\"Places\"][1][1][1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 198,
   "id": "6985a326",
   "metadata": {},
   "outputs": [],
   "source": [
    "y.update({\"10\":{\"Name\":\"Karthik\",\"Domains\":[\"AI\",\"ML\"]},\"Branch\":[\"CS\",\"IT\"]})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 199,
   "id": "9448c994",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'Id': 90,\n",
       " 'Name': 'Anu',\n",
       " 'College': 'RNSIT',\n",
       " 'Domain': 'Data Science',\n",
       " 'Course': 'CS',\n",
       " '10': {'Name': 'Karthik', 'Domains': ['AI', 'ML']},\n",
       " 'Branch': ['CS', 'IT']}"
      ]
     },
     "execution_count": 199,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 200,
   "id": "bc03c1b7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Anu'"
      ]
     },
     "execution_count": 200,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y[\"Name\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 201,
   "id": "b2fe3c53",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dict_keys(['Id', 'Name', 'College', 'Domain', 'Course', '10', 'Branch'])"
      ]
     },
     "execution_count": 201,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y.keys()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 202,
   "id": "e8f7744d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Karthik'"
      ]
     },
     "execution_count": 202,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y['10']['Name']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 203,
   "id": "34ab9d6f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'Id': 90,\n",
       " 'Name': 'Anu',\n",
       " 'College': 'RNSIT',\n",
       " 'Domain': 'Data Science',\n",
       " 'Course': 'CS',\n",
       " '10': {'Name': 'Karthik', 'Domains': ['AI', 'ML']},\n",
       " 'Branch': ['CS', 'IT']}"
      ]
     },
     "execution_count": 203,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 204,
   "id": "cd59766a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'IT'"
      ]
     },
     "execution_count": 204,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#IT\n",
    "y[\"Branch\"][1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 205,
   "id": "787033b8",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Dataframe-Multidimensional array\n",
    "y={\"Area\":[1000,2000,3000,4000],\"Price\":[10000,20000,40000,60000]}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 206,
   "id": "011060c3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dict"
      ]
     },
     "execution_count": 206,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 207,
   "id": "9a27e52b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'Area': [1000, 2000, 3000, 4000], 'Price': [10000, 20000, 40000, 60000]}"
      ]
     },
     "execution_count": 207,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 208,
   "id": "de4026aa",
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: pandas in c:\\users\\techciti\\anaconda3\\lib\\site-packages (1.3.4)\n",
      "Requirement already satisfied: numpy>=1.17.3 in c:\\users\\techciti\\anaconda3\\lib\\site-packages (from pandas) (1.20.3)\n",
      "Requirement already satisfied: python-dateutil>=2.7.3 in c:\\users\\techciti\\anaconda3\\lib\\site-packages (from pandas) (2.8.2)\n",
      "Requirement already satisfied: pytz>=2017.3 in c:\\users\\techciti\\anaconda3\\lib\\site-packages (from pandas) (2020.4)\n",
      "Requirement already satisfied: six>=1.5 in c:\\users\\techciti\\anaconda3\\lib\\site-packages (from python-dateutil>=2.7.3->pandas) (1.16.0)\n"
     ]
    }
   ],
   "source": [
    "#Installation of modules\n",
    "!pip install pandas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 209,
   "id": "439adf98",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 210,
   "id": "e36dcd4c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'Area': [1000, 2000, 3000, 4000], 'Price': [10000, 20000, 40000, 60000]}"
      ]
     },
     "execution_count": 210,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 211,
   "id": "926f9b8d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Area</th>\n",
       "      <th>Price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1000</td>\n",
       "      <td>10000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2000</td>\n",
       "      <td>20000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3000</td>\n",
       "      <td>40000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4000</td>\n",
       "      <td>60000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Area  Price\n",
       "0  1000  10000\n",
       "1  2000  20000\n",
       "2  3000  40000\n",
       "3  4000  60000"
      ]
     },
     "execution_count": 211,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.DataFrame(y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 212,
   "id": "518e87ca",
   "metadata": {},
   "outputs": [],
   "source": [
    "df=pd.DataFrame(y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 213,
   "id": "edf76e90",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Area</th>\n",
       "      <th>Price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1000</td>\n",
       "      <td>10000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2000</td>\n",
       "      <td>20000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3000</td>\n",
       "      <td>40000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4000</td>\n",
       "      <td>60000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Area  Price\n",
       "0  1000  10000\n",
       "1  2000  20000\n",
       "2  3000  40000\n",
       "3  4000  60000"
      ]
     },
     "execution_count": 213,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 214,
   "id": "0866adfa",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.to_csv(\"Price.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 215,
   "id": "9d45e3a7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'Area': [1000, 2000, 3000, 4000], 'Price': [10000, 20000, 40000, 60000]}"
      ]
     },
     "execution_count": 215,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 216,
   "id": "7c6e4428",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1000, 2000, 3000, 4000]"
      ]
     },
     "execution_count": 216,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y.get('Area')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 217,
   "id": "d016ca5e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1000, 2000, 3000, 4000]"
      ]
     },
     "execution_count": 217,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y.get('Area',\"Key not found\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 218,
   "id": "a2d94abd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Key not found'"
      ]
     },
     "execution_count": 218,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y.get('Areas',\"Key not found\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 219,
   "id": "1f27e979",
   "metadata": {},
   "outputs": [
    {
     "ename": "KeyError",
     "evalue": "'Areas'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "\u001b[1;32m~\\AppData\\Local\\Temp/ipykernel_6484/527994910.py\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0my\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m\"Areas\"\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;31mKeyError\u001b[0m: 'Areas'"
     ]
    }
   ],
   "source": [
    "y[\"Areas\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 221,
   "id": "16f75e01",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.to_csv(\"Price.xslx\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 222,
   "id": "e0bb8955",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Sets={}\n",
    "#Mapping Process\n",
    "#unordered,Iterable,Mutable,Multiple Datatypes\n",
    "x={\"Python\",\"AI\",234,234,5.36,1}\n",
    "#Don't allows repeated data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 223,
   "id": "60f4e181",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{1, 234, 5.36, 'AI', 'Python'}"
      ]
     },
     "execution_count": 223,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 224,
   "id": "f7b594c3",
   "metadata": {},
   "outputs": [],
   "source": [
    "y={234,1,\"AI\",\"C\"}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 225,
   "id": "d5085ba3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{1, 234, 'AI', 'C'}"
      ]
     },
     "execution_count": 225,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 226,
   "id": "3965caf5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{1, 234, 5.36, 'AI', 'C', 'Python'}"
      ]
     },
     "execution_count": 226,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y | x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 227,
   "id": "4a3200ab",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{1, 234, 'AI'}"
      ]
     },
     "execution_count": 227,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y & x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 228,
   "id": "e4379e3b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 228,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "234 in x or y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 229,
   "id": "c212a9dd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{1, 234, 5.36, 'AI', 'Python'}"
      ]
     },
     "execution_count": 229,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 230,
   "id": "70ff8ee9",
   "metadata": {},
   "outputs": [],
   "source": [
    "x.discard('AI')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 232,
   "id": "2268d57e",
   "metadata": {},
   "outputs": [],
   "source": [
    "x.discard(\"Ai\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 233,
   "id": "b924ac62",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{1, 234, 5.36, 'Python'}"
      ]
     },
     "execution_count": 233,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 234,
   "id": "25a2610a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{1, 234, 5.36, 'Python'}"
      ]
     },
     "execution_count": 234,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 240,
   "id": "4b1b8fcc",
   "metadata": {},
   "outputs": [],
   "source": [
    "x={\"Id\":10}\n",
    "y={\"Branch\":\"CS\",\"Name\":\"Preethi\"}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 241,
   "id": "c6152a22",
   "metadata": {},
   "outputs": [],
   "source": [
    "y.update(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 242,
   "id": "20d9926f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'Branch': 'CS', 'Name': 'Preethi', 'Id': 10}"
      ]
     },
     "execution_count": 242,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 239,
   "id": "3ee6c8e8",
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "unsupported operand type(s) for +: 'dict' and 'dict'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[1;32m~\\AppData\\Local\\Temp/ipykernel_6484/1525011898.py\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0mx\u001b[0m\u001b[1;33m+\u001b[0m\u001b[0my\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;31mTypeError\u001b[0m: unsupported operand type(s) for +: 'dict' and 'dict'"
     ]
    }
   ],
   "source": [
    "x+y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1f5ef85f",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
